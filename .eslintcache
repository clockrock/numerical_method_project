[{"D:\\Github\\numerical_method_project\\src\\index.js":"1","D:\\Github\\numerical_method_project\\src\\App.js":"2","D:\\Github\\numerical_method_project\\src\\Calculate\\Root of Equation\\Graphical.js":"3","D:\\Github\\numerical_method_project\\src\\Calculate\\Root of Equation\\Bisection.js":"4","D:\\Github\\numerical_method_project\\src\\Calculate\\Root of Equation\\False_position.js":"5","D:\\Github\\numerical_method_project\\src\\Calculate\\Root of Equation\\Onepoint.js":"6","D:\\Github\\numerical_method_project\\src\\Calculate\\Root of Equation\\Secant.js":"7","D:\\Github\\numerical_method_project\\src\\Calculate\\Linear Algebra\\Cramer.js":"8","D:\\Github\\numerical_method_project\\src\\Calculate\\Linear Algebra\\Gauss.js":"9","D:\\Github\\numerical_method_project\\src\\Calculate\\Root of Equation\\Newton-raphson.js":"10","D:\\Github\\numerical_method_project\\src\\Calculate\\Linear Algebra\\Jordan.js":"11","D:\\Github\\numerical_method_project\\src\\Calculate\\Linear Algebra\\Inverse.js":"12","D:\\Github\\numerical_method_project\\src\\Calculate\\Linear Algebra\\LU.js":"13","D:\\Github\\numerical_method_project\\src\\Calculate\\Linear Algebra\\Cholesky.js":"14","D:\\Github\\numerical_method_project\\src\\Calculate\\Linear Algebra\\Seidel.js":"15","D:\\Github\\numerical_method_project\\src\\Calculate\\Linear Algebra\\Jacobi.js":"16","D:\\Github\\numerical_method_project\\src\\Calculate\\Linear Algebra\\Gradient.js":"17","D:\\Github\\numerical_method_project\\src\\Calculate\\Interpolation\\Newton.js":"18","D:\\Github\\numerical_method_project\\src\\Calculate\\Interpolation\\Lagrange.js":"19","D:\\Github\\numerical_method_project\\src\\Calculate\\Interpolation\\Spline.js":"20","D:\\Github\\numerical_method_project\\src\\Calculate\\Regression\\Linear.js":"21","D:\\Github\\numerical_method_project\\src\\Calculate\\Regression\\Polynomial.js":"22","D:\\Github\\numerical_method_project\\src\\Calculate\\Integration\\CompositeTrapzoidal.js":"23","D:\\Github\\numerical_method_project\\src\\Calculate\\Regression\\MultipleLinear.js":"24","D:\\Github\\numerical_method_project\\src\\Calculate\\Integration\\CompositeSimpson.js":"25","D:\\Github\\numerical_method_project\\src\\Calculate\\Differentiation\\Forwardh.js":"26","D:\\Github\\numerical_method_project\\src\\Calculate\\Differentiation\\ForwardH2.js":"27","D:\\Github\\numerical_method_project\\src\\Calculate\\Differentiation\\Backwardh.js":"28","D:\\Github\\numerical_method_project\\src\\Calculate\\Differentiation\\Backwardh2.js":"29","D:\\Github\\numerical_method_project\\src\\Calculate\\Differentiation\\Centralh.js":"30","D:\\Github\\numerical_method_project\\src\\Calculate\\ODE\\Heun.js":"31","D:\\Github\\numerical_method_project\\src\\Calculate\\Differentiation\\Centralh2.js":"32","D:\\Github\\numerical_method_project\\src\\Calculate\\ODE\\Modified_Euler.js":"33","D:\\Github\\numerical_method_project\\src\\Calculate\\ODE\\Euler.js":"34","D:\\Github\\numerical_method_project\\src\\services\\Services.js":"35","D:\\Github\\numerical_method_project\\src\\components\\Graph.js":"36","D:\\Github\\numerical_method_project\\src\\components\\inputStyle.js":"37"},{"size":497,"mtime":1653122905946,"results":"38","hashOfConfig":"39"},{"size":11103,"mtime":1653123701864,"results":"40","hashOfConfig":"39"},{"size":4027,"mtime":1653122905945,"results":"41","hashOfConfig":"39"},{"size":6279,"mtime":1653122905944,"results":"42","hashOfConfig":"39"},{"size":5319,"mtime":1653122905944,"results":"43","hashOfConfig":"39"},{"size":4064,"mtime":1653122905945,"results":"44","hashOfConfig":"39"},{"size":4394,"mtime":1653122905945,"results":"45","hashOfConfig":"39"},{"size":6036,"mtime":1653122905940,"results":"46","hashOfConfig":"39"},{"size":6598,"mtime":1653122905940,"results":"47","hashOfConfig":"39"},{"size":4088,"mtime":1653122905945,"results":"48","hashOfConfig":"39"},{"size":6828,"mtime":1653122905941,"results":"49","hashOfConfig":"39"},{"size":6243,"mtime":1653122905941,"results":"50","hashOfConfig":"39"},{"size":5574,"mtime":1653122905942,"results":"51","hashOfConfig":"39"},{"size":7622,"mtime":1653122905940,"results":"52","hashOfConfig":"39"},{"size":8555,"mtime":1653122905942,"results":"53","hashOfConfig":"39"},{"size":8435,"mtime":1653122905941,"results":"54","hashOfConfig":"39"},{"size":9564,"mtime":1653122905941,"results":"55","hashOfConfig":"39"},{"size":7910,"mtime":1653122905939,"results":"56","hashOfConfig":"39"},{"size":7437,"mtime":1653122905939,"results":"57","hashOfConfig":"39"},{"size":8150,"mtime":1653122905940,"results":"58","hashOfConfig":"39"},{"size":6840,"mtime":1653122905943,"results":"59","hashOfConfig":"39"},{"size":7810,"mtime":1653122905944,"results":"60","hashOfConfig":"39"},{"size":3617,"mtime":1653122905939,"results":"61","hashOfConfig":"39"},{"size":8001,"mtime":1653122905943,"results":"62","hashOfConfig":"39"},{"size":3769,"mtime":1653122905938,"results":"63","hashOfConfig":"39"},{"size":4070,"mtime":1653122905938,"results":"64","hashOfConfig":"39"},{"size":4278,"mtime":1653122905938,"results":"65","hashOfConfig":"39"},{"size":4047,"mtime":1653122905937,"results":"66","hashOfConfig":"39"},{"size":4280,"mtime":1653122905937,"results":"67","hashOfConfig":"39"},{"size":4103,"mtime":1653122905937,"results":"68","hashOfConfig":"39"},{"size":4522,"mtime":1653122905943,"results":"69","hashOfConfig":"39"},{"size":4396,"mtime":1653122905937,"results":"70","hashOfConfig":"39"},{"size":4850,"mtime":1653122905943,"results":"71","hashOfConfig":"39"},{"size":4493,"mtime":1653122905942,"results":"72","hashOfConfig":"39"},{"size":1215,"mtime":1653122905947,"results":"73","hashOfConfig":"39"},{"size":762,"mtime":1653122905946,"results":"74","hashOfConfig":"39"},{"size":280,"mtime":1653316494276,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"kxc569",{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"D:\\Github\\numerical_method_project\\src\\index.js",[],["155","156"],"D:\\Github\\numerical_method_project\\src\\App.js",["157"],"import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\r\nimport { Layout, Menu } from 'antd';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './screen.css';\r\nimport { BookFilled,PieChartOutlined,StockOutlined } from '@ant-design/icons';\r\n\r\nimport Graphical from './Calculate/Root of Equation/Graphical';\r\nimport Bisection from './Calculate/Root of Equation/Bisection';\r\nimport FalsePosition from './Calculate/Root of Equation/False_position';\r\nimport Onepoint from './Calculate/Root of Equation/Onepoint';\r\nimport Newton from './Calculate/Root of Equation/Newton-raphson';\r\nimport Secant from './Calculate/Root of Equation/Secant';\r\nimport Cramer from './Calculate/Linear Algebra/Cramer';\r\nimport Gauss from './Calculate/Linear Algebra/Gauss';\r\nimport Jordan from './Calculate/Linear Algebra/Jordan';\r\nimport Inverse from './Calculate/Linear Algebra/Inverse';\r\nimport LU from './Calculate/Linear Algebra/LU';\r\nimport Cholesky from './Calculate/Linear Algebra/Cholesky';\r\nimport Jacobi from './Calculate/Linear Algebra/Jacobi';\r\nimport Seidel from './Calculate/Linear Algebra/Seidel';\r\nimport Gradient from './Calculate/Linear Algebra/Gradient';\r\nimport NewtonInterpolate from './Calculate/Interpolation/Newton';\r\nimport Lagrange from './Calculate/Interpolation/Lagrange';\r\nimport Spline from './Calculate/Interpolation/Spline';\r\nimport Linear from './Calculate/Regression/Linear';\r\nimport Polynomial from './Calculate/Regression/Polynomial';\r\nimport MultipleLinear from './Calculate/Regression/MultipleLinear';\r\nimport CompositeTrapezoidal from './Calculate/Integration/CompositeTrapzoidal';\r\nimport CompositeSimpson from './Calculate/Integration/CompositeSimpson';\r\nimport ForwardH from './Calculate/Differentiation/Forwardh';\r\nimport ForwardH2 from './Calculate/Differentiation/ForwardH2';\r\nimport BackwardH from './Calculate/Differentiation/Backwardh';\r\nimport BackwardH2 from './Calculate/Differentiation/Backwardh2';\r\nimport CentralH from './Calculate/Differentiation/Centralh';\r\nimport CentralH2 from './Calculate/Differentiation/Centralh2';\r\nimport Euler from './Calculate/ODE/Euler';\r\nimport Heun from './Calculate/ODE/Heun';\r\nimport ModifiedEuler from './Calculate/ODE/Modified_Euler';\r\n\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content,Footer, Sider } = Layout;\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout>\r\n          <Header className=\"header\" style={{backgroundColor:\"#202A44\", color:\"#e89a3c\" ,height: \"100px\" }}>\r\n            <div className=\"headertext\">\r\n              <label><StockOutlined  style={{color:\"#e89a3c\" ,fontSize:\"40px\", marginRight:\"10px\"}} />Numerical Method</label>\r\n            </div>\r\n          </Header>\r\n          <Layout>\r\n          <Sider width={335} style={{ background: \"#fff\" }}>\r\n              <Menu\r\n                mode=\"inline\"\r\n                style={{ height: '90vh', borderRight: 0, backgroundColor: \"#9BD3DD\", overflowY: \"scroll\" }}\r\n                theme=\"light\"\r\n              >\r\n                <SubMenu key=\"root_submenu\" title={<span>Root of Equation</span>}>\r\n                  <Menu.Item key=\"menu_graphoical\" ><Link to=\"/graphical\">Graphical</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_bisection\" ><Link to=\"/bisection\">Bisection</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_false\"><Link to=\"/false-position\">False Position</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_onepoint\"><Link to=\"/one-point\">One-Point Iteration</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_newton\"><Link to=\"/newton-raphson\">Newton-Raphson</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_secant\"><Link to=\"/secant\">Secant Method</Link></Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"algebra_submenu\" title={<span>Linear Algebra</span>}>\r\n                  <Menu.Item key=\"menu_cramer\"><Link to=\"/cramer\">Cramer's Rule</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_gauss\"><Link to=\"/gauss\">Gauss's Elimination</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_jordan\"><Link to=\"/jordan\">Gauss Jordan Method</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_inverse\"><Link to=\"/inverse\">Matrix Inversion</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_lu\"><Link to=\"/lu\">LU Decomposition</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_cholesky\"><Link to=\"/cholesky\">Cholesky Decomposition</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_jacobi\"><Link to=\"/jacobi\">Jacobi Iteration Method</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_seidel\"><Link to=\"/seidel\">Gauss Seidel Iteration</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_gradient\"><Link to=\"/conjugate-gradient\">Conjugate Gradient Method</Link></Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"interpolate_submenu\" title={<span>Interpolation</span>}>\r\n                  <Menu.Item key=\"menu_divide\"><Link to=\"/newton\">Newton Divide Difference</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_lagrange\"><Link to=\"/lagrange\">Lagrange</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_spline\"><Link to=\"/spline\">Spline</Link></Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"regression_submenu\" title={<span>Least Squares Regression</span>}>\r\n                  <Menu.Item key=\"menu_linear\"><Link to=\"/linear\">Linear Regression</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_poly\"><Link to=\"/polynomial\">Polynomial Regression</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_multiple\"><Link to=\"/multiple-linear\">Multiple Linear Regression</Link></Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"integrate_submenu\" title={<span>Integration</span>}>\r\n                  <Menu.Item key=\"menu_compositeTrapzoidal\"><Link to=\"/trapezoidal\">Composite Trapezoidal Rule</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_compositeSimpson\"><Link to=\"/simpson\">Composite Simpson's Rule</Link></Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"diff_submenu\" title={<span>Differentiation</span>}>\r\n                  <Menu.Item key=\"menu_forwardh\"><Link to=\"/forwardh\">Forward Divided-Differences O(h)</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_backwardh\"><Link to=\"/backwardh\">Backward Divided-Differences O(h)</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_centralh\"><Link to=\"/centralh\">Central Divided-Differences O(h{<sup>2</sup>})</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_forward2h\"><Link to=\"/forwardh2\">Forward Divided-Differences O(h{<sup>2</sup>})</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_backward2h\"><Link to=\"/backwardh2\">Backward Divided-Differences O(h{<sup>2</sup>})</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_central2h\"><Link to=\"/centralh2\">Central Divided-Differences O(h{<sup>4</sup>})</Link></Menu.Item>\r\n                </SubMenu>\r\n                {/* <SubMenu key=\"de_submenu\" title={<span>Ordinary Differential Equation</span>}>\r\n                  <Menu.Item key=\"menu_euler\"><Link to=\"/euler\">Euler's Method</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_heun\"><Link to=\"/heun\">Heun's Method</Link></Menu.Item>\r\n                  <Menu.Item key=\"menu_modifier\"><Link to=\"/modifier-euler\">Modifier Euler's Method</Link></Menu.Item>\r\n                </SubMenu> */}\r\n              </Menu>\r\n            </Sider>\r\n            \r\n            <Layout style={{ padding: '0 25px 25px' }}>\r\n              <Content style={{ padding: 150, margin: 0, minHeight: 280, }}>\r\n                <Switch>\r\n                  {/* Root of Equation */}\r\n                  <Route exact path=\"/graphical\" component={Graphical} />\r\n                  <Route exact path=\"/bisection\" component={Bisection} />\r\n                  <Route exact path=\"/false-position\" component={FalsePosition} />\r\n                  <Route exact path=\"/one-point\" component={Onepoint} />\r\n                  <Route exact path=\"/newton-raphson\" component={Newton} />\r\n                  <Route exact path=\"/secant\" component={Secant} />\r\n                  {/* Linear Algebra */}\r\n                  <Route exact path=\"/cramer\" component={Cramer} />\r\n                  <Route exact path=\"/gauss\" component={Gauss} />\r\n                  <Route exact path=\"/jordan\" component={Jordan} />\r\n                  <Route exact path=\"/inverse\" component={Inverse} />\r\n                  <Route exact path=\"/lu\" component={LU} />\r\n                  <Route exact path=\"/cholesky\" component={Cholesky} />\r\n                  <Route exact path=\"/jacobi\" component={Jacobi} />\r\n                  <Route exact path=\"/seidel\" component={Seidel} />\r\n                  <Route exact path=\"/conjugate-gradient\" component={Gradient} />\r\n                  {/* Interpolation */}\r\n                  <Route exact path=\"/newton\" component={NewtonInterpolate} />\r\n                  <Route exact path=\"/lagrange\" component={Lagrange} />\r\n                  <Route exact path=\"/spline\" component={Spline} />\r\n                  {/* Regression */}\r\n                  <Route exact path=\"/linear\" component={Linear} />\r\n                  <Route exact path=\"/polynomial\" component={Polynomial} />\r\n                  <Route exact path=\"/multiple-linear\" component={MultipleLinear} />\r\n                  {/* Integration */}\r\n                  <Route exact path=\"/trapezoidal\" component={CompositeTrapezoidal} />\r\n                  <Route exact path=\"/simpson\" component={CompositeSimpson} />\r\n                  {/* Differentiation */}\r\n                  <Route exact path=\"/forwardh\" component={ForwardH} />\r\n                  <Route exact path=\"/backwardh\" component={BackwardH} />\r\n                  <Route exact path=\"/centralh\" component={CentralH} />\r\n                  <Route exact path=\"/forwardh2\" component={ForwardH2} />\r\n                  <Route exact path=\"/backwardh2\" component={BackwardH2} />\r\n                  <Route exact path=\"/centralh2\" component={CentralH2} />\r\n                  {/* Ordinary Differential Equation (ODE) */}\r\n                  <Route exact path=\"/euler\" component={Euler} />\r\n                  <Route exact path=\"/heun\" component={Heun} />\r\n                  <Route exact path=\"/modifier-euler\" component={ModifiedEuler} />\r\n                </Switch>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n          <Footer style={{ backgroundColor: \"#202A44\", minHeight: 120 }}>\r\n            <p style={{ fontSize: \"20px\", fontWeight: \"bold\", color: \"white\" }}>\r\n              © All Right Reserved<br />\r\n\r\n              <p style={{fontSize:\"22px\", verticalAlign:\"text-bottom\"}}><BookFilled style={{ fontSize: \"30px\" }} /><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://cs.kmutnb.ac.th/\" style={{ color: \"white\", textDecoration: \"none\" }}>Made by Nattachai Supharojanee</a></p>\r\n\r\n            </p>\r\n\r\n\r\n          </Footer>\r\n        </Layout>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\nexport default App;\r\n","D:\\Github\\numerical_method_project\\src\\Calculate\\Root of Equation\\Graphical.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Root of Equation\\Bisection.js",["158"],"import React, { Component } from 'react'\r\nimport { Card, Input, Button, Table } from 'antd';\r\nimport '../../screen.css';\r\nimport 'antd/dist/antd.css';\r\nimport { error, func, getXL_XR_from_API } from '../../services/Services';\r\nimport Graph from '../../components/Graph';\r\nimport {InputStyle,colorBg} from '../../components/inputStyle';\r\n\r\nvar dataInTable = []\r\nconst columns = [\r\n    {\r\n        title: \"Iteration\",\r\n        dataIndex: \"iteration\",\r\n        key: \"iteration\"\r\n    },\r\n    {\r\n        title: \"XL\",\r\n        dataIndex: \"xl\",\r\n        key: \"xl\"\r\n    },\r\n    {\r\n        title: \"XR\",\r\n        dataIndex: \"xr\",\r\n        key: \"xr\"\r\n    },\r\n    {\r\n        title: \"X\",\r\n        dataIndex: \"x\",\r\n        key: \"x\"\r\n    },\r\n    {\r\n        title: \"Error\",\r\n        key: \"error\",\r\n        dataIndex: \"error\"\r\n    }\r\n];\r\n\r\nclass Bisection extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = this.getInitialState();\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.bisection = this.bisection.bind(this);\r\n        this.handleAPI = this.handleAPI.bind(this);\r\n    }\r\n\r\n    getInitialState = () => ({\r\n        fx: \"\",\r\n        xl: 0,\r\n        xr: 0,\r\n        showOutputCard: false,\r\n        showGraph: false,\r\n        moveLeft: false\r\n        \r\n    })\r\n\r\n    bisection(xl, xr) {\r\n        var increaseFunction = false;\r\n        var xm = 0;\r\n        var sum = parseFloat(0.000000);\r\n        var n = 0;\r\n        var data = []\r\n        data['xl'] = []\r\n        data['xr'] = []\r\n        data['x'] = []\r\n        data['error'] = []\r\n        if (func(this.state.fx, xl) < func(this.state.fx, xr)) {\r\n            increaseFunction = true;\r\n        }\r\n\r\n        do {\r\n            xm = (xl + xr) / 2;\r\n            if (func(this.state.fx, xm) * func(this.state.fx, xr) < 0) {\r\n                sum = error(xm, xr);\r\n                if (increaseFunction) {\r\n                    xl = xm;\r\n                }\r\n                else {\r\n                    xr = xm;\r\n                }\r\n\r\n            }\r\n            else {\r\n                sum = error(xm, xl);\r\n                if (increaseFunction) {\r\n                    xr = xm;\r\n                }\r\n                else {\r\n                    xl = xm;\r\n                }\r\n            }\r\n            data['xl'][n] = xl;\r\n            data['xr'][n] = xr;\r\n            data['x'][n] = xm.toFixed(8);\r\n            data['error'][n] = Math.abs(sum).toFixed(8);\r\n            n++;\r\n        } while (Math.abs(sum) > 0.000001);\r\n        this.createTable(data['xl'], data['xr'], data['x'], data['error']);\r\n        this.setState({\r\n            showOutputCard: true,\r\n            showGraph: true,\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    async handleAPI() {\r\n    \r\n        const response = await getXL_XR_from_API();\r\n        this.setState({\r\n            fx: response[0].fx,\r\n            xl: response[0].xl,\r\n            xr: response[0].xr\r\n        })\r\n        const { fx, xl, xr } = this.state;\r\n\r\n        this.bisection(parseFloat(xl), parseFloat(xr));\r\n\r\n    }\r\n\r\n    createTable(xl, xr, x, error) {\r\n        dataInTable = []\r\n        for (var i = 0; i < xl.length; i++) {\r\n            dataInTable.push({\r\n                iteration: i + 1,\r\n                xl: xl[i],\r\n                xr: xr[i],\r\n                x: x[i],\r\n                error: error[i]\r\n            });\r\n        }\r\n\r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n\r\n    }\r\n    render() {\r\n        let { fx, xl, xr } = this.state;\r\n        return (\r\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\r\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Bisection</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Card\r\n                            bordered={true}\r\n                            style={{  colorBg, borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\r\n                            onChange={this.handleChange}\r\n                            id=\"inputCard\"\r\n                        >\r\n                            <h2 style={{color:\"black\"}}>f(x)</h2><Input size=\"large\" name=\"fx\" style={InputStyle}></Input>\r\n                            <h2 style={{color:\"black\"}}>X<sub>L</sub></h2><Input size=\"large\" name=\"xl\" style={InputStyle}></Input>\r\n                            <h2 style={{color:\"black\"}}>X<sub>R</sub></h2><Input size=\"large\" name=\"xr\" style={InputStyle}></Input><br /><br />\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    <Button id=\"submit_button\" onClick={\r\n                                    () => this.bisection(parseFloat(xl), parseFloat(xr))\r\n                                }\r\n                                    style={{ background: \"#4caf50\", color: \"white\" }}>Submit</Button>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <Button id=\"submit_button_api\" onClick={() => this.handleAPI()}\r\n                                    style={{ background: \"blue\", color: \"white\" }}>Calculate from data that get from API</Button>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {this.state.showGraph && <Graph fx={fx} title=\"Bisection Method\" />}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.state.showOutputCard &&\r\n                        <Card\r\n                            title={\"Output\"}\r\n                            bordered={true}\r\n                            style={{ width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\" }}\r\n                            id=\"outputCard\"\r\n                        >\r\n                            <Table pagination={{defaultPageSize: 5}} columns={columns} dataSource={dataInTable} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\" }}></Table>\r\n                        </Card>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Bisection;","D:\\Github\\numerical_method_project\\src\\Calculate\\Root of Equation\\False_position.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Root of Equation\\Onepoint.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Root of Equation\\Secant.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Linear Algebra\\Cramer.js",["159"],"import React, { Component } from 'react'\r\nimport { Card, Input, Button } from 'antd';\r\nimport { det } from 'mathjs';\r\nimport '../../screen.css';\r\nimport 'antd/dist/antd.css';\r\nimport {InputStyle,colorBg} from '../../components/inputStyle';\r\n\r\n\r\nvar A = [], B = [], answer = [], matrixA = [], matrixB = []\r\nclass Cramer extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: parseInt(0),\r\n            column: parseInt(0),\r\n            showDimentionForm: true,\r\n            showMatrixForm: false,\r\n            showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.cramer = this.cramer.bind(this);\r\n\r\n    }\r\n\r\n    cramer() {\r\n        this.initMatrix();\r\n        var counter = 0;\r\n        \r\n\r\n        while (counter != this.state.row) {\r\n            var transformMatrix = JSON.parse(JSON.stringify(A)); //Deep copy\r\n            for (var i = 0; i < this.state.row; i++) {\r\n                for (var j = 0; j < this.state.column; j++) {\r\n                    if (j === counter) {\r\n                        transformMatrix[i][j] = B[i]\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n            counter++;\r\n            answer.push(<h2>X<sub>{counter}</sub>=&nbsp;&nbsp;{Math.round(det(transformMatrix)) / Math.round(det(A))}</h2>)\r\n            answer.push(<br />)\r\n\r\n        }\r\n        this.setState({\r\n            showOutputCard: true\r\n        });\r\n\r\n    }\r\n\r\n    createMatrix(row, column) {\r\n        for (var i = 1; i <= row; i++) {\r\n            for (var j = 1; j <= column; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"14%\",\r\n                    height: \"50%\",\r\n                    backgroundColor: \"#06d9a0\",\r\n                    marginInlineEnd: \"5%\",\r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"white\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }}\r\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\r\n            }\r\n            matrixA.push(<br />)\r\n            matrixB.push(<Input style={{\r\n                width: \"14%\",\r\n                height: \"50%\",\r\n                backgroundColor: \"black\",\r\n                marginInlineEnd: \"5%\",\r\n                marginBlockEnd: \"5%\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }}\r\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\r\n        }\r\n\r\n        this.setState({\r\n            showDimentionForm: false,\r\n            showMatrixForm: true,\r\n        })\r\n\r\n\r\n    }\r\n\r\n    initMatrix() {\r\n        for (var i = 0; i < this.state.row; i++) {\r\n            A[i] = []\r\n            for (var j = 0; j < this.state.column; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let { row, column } = this.state;\r\n        return (\r\n            <div style={{ padding: \"30px\" }}>\r\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Cramer's Rule</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Card\r\n                            bordered={true}\r\n                            style={{ colorBg, borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\r\n                            onChange={this.handleChange}\r\n                        >\r\n\r\n                            {this.state.showDimentionForm &&\r\n                                <div>\r\n                                    <h4>Row</h4><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\r\n                                    <h4>Column</h4><Input size=\"large\" name=\"column\" style={InputStyle}></Input><br />\r\n                                    <Button id=\"dimention_button\" onClick={\r\n                                        () => this.createMatrix(row, column)\r\n                                    }\r\n                                        style={{ background: \"#4caf50\", color: \"white\" }}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </div>\r\n                            }\r\n                            {this.state.showMatrixForm &&\r\n                                <div>\r\n                                    <h2>Matrix [A]</h2><br />{matrixA}\r\n                                    <h2>Vector [B]<br /></h2>{matrixB}<br/>\r\n                                    <Button\r\n                                        size=\"large\"\r\n                                        id=\"matrix_button\"\r\n                                        style={{ background: \"blue\", color: \"white\" }}\r\n                                        onClick={() => this.cramer()}>\r\n                                        Submit\r\n                                </Button>\r\n                                </div>\r\n                            }\r\n\r\n\r\n\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {this.state.showOutputCard &&\r\n                            <Card\r\n                                title={\"Output\"}\r\n                                bordered={true}\r\n                                style={{ width: \"100%\", background: \"#3d683d\", color: \"#FFFFFFFF\", float: \"left\" }}\r\n                                onChange={this.handleChange}>\r\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{answer}</p>\r\n                            </Card>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Cramer;\r\n\r\n\r\n\r\n\r\n","D:\\Github\\numerical_method_project\\src\\Calculate\\Linear Algebra\\Gauss.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Root of Equation\\Newton-raphson.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Linear Algebra\\Jordan.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Linear Algebra\\Inverse.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Linear Algebra\\LU.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Linear Algebra\\Cholesky.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Linear Algebra\\Seidel.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Linear Algebra\\Jacobi.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Linear Algebra\\Gradient.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Interpolation\\Newton.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Interpolation\\Lagrange.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Interpolation\\Spline.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Regression\\Linear.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Regression\\Polynomial.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Integration\\CompositeTrapzoidal.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Regression\\MultipleLinear.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Integration\\CompositeSimpson.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Differentiation\\Forwardh.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Differentiation\\ForwardH2.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Differentiation\\Backwardh.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Differentiation\\Backwardh2.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Differentiation\\Centralh.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\ODE\\Heun.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\Differentiation\\Centralh2.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\ODE\\Modified_Euler.js",[],"D:\\Github\\numerical_method_project\\src\\Calculate\\ODE\\Euler.js",[],"D:\\Github\\numerical_method_project\\src\\services\\Services.js",[],["160","161"],"D:\\Github\\numerical_method_project\\src\\components\\Graph.js",[],"D:\\Github\\numerical_method_project\\src\\components\\inputStyle.js",[],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":6,"column":21,"nodeType":"168","messageId":"169","endLine":6,"endColumn":37},{"ruleId":"166","severity":1,"message":"170","line":117,"column":17,"nodeType":"168","messageId":"169","endLine":117,"endColumn":19},{"ruleId":"171","severity":1,"message":"172","line":31,"column":24,"nodeType":"173","messageId":"174","endLine":31,"endColumn":26},{"ruleId":"162","replacedBy":"175"},{"ruleId":"164","replacedBy":"176"},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'PieChartOutlined' is defined but never used.","Identifier","unusedVar","'fx' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["177"],["178"],"no-global-assign","no-unsafe-negation"]